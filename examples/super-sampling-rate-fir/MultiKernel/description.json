{
    "name": "Multi Kernel", 
    "description": [
        "This simple example demonstrate the flow to create aie Kernel and how to connect aie Kernel to PL Kernels and validate the design running on the AI Engine."
    ],
    "flow": "versal",
    "keywords": [
        "aiecompiler", 
        "aiesimulator",
        "stream_connect"
    ], 
    "key_concepts": [
        "AI Engine", 
        "Adaptive Data Flow", 
        "Graph"
    ],
    "platform_whitelist": [
        "vck190"
    ],
    "platform_blacklist": [
        "zc",
        "aws-vu9p-f1",
        "samsung",
        "u2_",
        "vck5000",
        "dma"
    ],
    "os": [
        "Linux"
    ], 
    "runtime": [
        "OpenCL"
    ], 
    "host": {
       "host_exe": "host_elf",
        "compiler": {
            "sources": [
                "./ps/host.cpp",
                "./Work/ps/c_rts/aie_control_xrt.cpp"
            ], 
            "includepaths": [
                "./",
                "./aie",
                "../../../include",
                "$(SYSROOT)/usr/include/xrt/"                
            ],
            "options": "--sysroot=$(SYSROOT)"
        }
    },
    "aiecompiler": {
        "compiler": {
            "includepaths": [
                "./aie",
                "../../../include",
                "../../../src/aie"
            ],
            "clflags": [
                "--constraints=../../../cfg/aie_constraints.json"
            ]
        }
    },
    "aiecontainers": [
        {
            "accelerators": [
                {
                    "location": "./aie/graph.cpp",
                    "pl-freq": 100,
                    "workdir": "./Work",
                    "name": "libadf.a"
                }
            ]
        }
    ],
    "data": [
        "PROJECT/data/PhaseIn_0.txt"
    ],
    "v++": {
        "compiler": {
            "includepaths": [
                "../../../include"
            ]
        },
        "linker": {
                    "cflags": [
                        "--config ../../../cfg/system.cfg"
                    ]
                },
        "package": {
                    "cflags": [
                        "--package.defer_aie_run"
                    ]
                }
     },
    "match_makefile" : "true",
    "containers": [
        {
            "accelerators": [
                {
                    "name": "vck190_test_harness", 
                    "frequency": 250,
                    "location": "../../../src/pl/test_harness.cpp",
                    "num_compute_units": "1"
                }
            ],
            "frequency": 250,
            "name": "vck190_test_harness"
        }
    ],
    "launch": [
        {
            "cmd_args": "BUILD/vck190_test_harness.xclbin", 
            "name": "generic launch for all flows"
        }
    ],
    "contributors": [
        {
            "url": "http://www.xilinx.com", 
            "group": "Xilinx"
        }
    ],
    "testinfo": {
        "disable": false,
        "jobs": [
            {
                "index": 0,
                "dependency": [],
                "env": "",
                "cmd": "",
                "max_memory_MB": 32768,
                "max_time_min": 300
            }
        ],
        "targets": [
            "vitis_sw_emu",
            "vitis_hw_emu",
            "vitis_hw_build"
        ],
        "category": "canary"
    }
}
